17.10.2019
1.0
-first release 

27.10.2019
1.1
-Unity 2019 support
-updated modules: new api for managing load balancing; now you don't need to have 'SmartAIUpdater' object on scene
-update frequency can be set separately for every ai thanks to new load balancing api
-general code cleanup and improved encapsulation in provided examples

09.01.2020
1.2
features:
-graph elements copying, pasting and duplicating, from node's context menu
-tool for analysis and automatic fixing of AiGraph
-debugging last score for single scorers in inspector
-new set of scorers and tasks that are reflection based, see RVModules\RVSmartAI\Content\Code\AI\ReflectionBased\
allowing to manipulate public properties on context and AiTaskParams parameters via ai graphs
-scorer types: now you can select math operation for every scorer: add, sub, multiply or divide.
It operates on result score from all earlier scorers, so if the last scorer is divide, it will divide whole returning score by its own score.

fixes:
-graph is destroyed on Ai component OnDestroy
-script templates using public instead of protected access modifier
-AiTaskParams - scores below 0 will work properly now
-AiTaskParams disabling fix
-general code cleanup

30.05.2020
1.2.1
-added button to fold nodes in graph

07.2020
1.3
features:
-secondary graphs
-nested graphs system
-new node type: graph node for referencing other graphs
-search bar for adding scorers and tasks windows
-ai jobs system
-AiTask can now have scorers just like AiUtility

improvements:
-automatic and more consistent graph elements' game objects naming
-lost references to child graph element now automatically fixed 
-automatic null child graph elements removing
-updated RVLoadBalancer and RVUtilities modules to newest version
-improvements in movement physx scanner

fixes:
-fixed node connection lines not centered in connection ports
-fixed copying/duplicating nodes in variant graph

changes:
-all scorers default score is 1 instead of 0
-changed max slider value for graph update frequency from 30 to 8
-removed graphStepsPerUpdate from inspector, by default all graphs will now go through all nodes in one update as there is very little to gain
 by not going through whole graph in every update and it makes ai behaviour inconsistent